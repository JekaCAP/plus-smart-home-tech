spring:
  application:
    name: analyzer

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true

  output:
    ansi:
      enabled: always

  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://localhost:6541/analyzer
    username: analyzer
    password: analyzer

  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql

  kafka:
    hub:
      bootstrap-servers: localhost:9092
      group-id: hub.group
      client-id: hub-consumer-1
      consumer-topics: telemetry.hubs.v1
      value-deserializer: ru.practicum.kafka.deserializer.HubEventAvroDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
      auto-commit-interval: 5000
      auto-offset-reset: earliest
      max-poll-records: 20

    snapshot:
      bootstrap-servers: localhost:9092
      group-id: snapshot.group
      client-id: snapshot-consumer-1
      consumer-topics: telemetry.snapshots.v1
      value-deserializer: ru.practicum.kafka.deserializer.SensorsSnapshotAvroDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      auto-offset-reset: latest
      max-poll-records: 200
      max-poll-interval: 300000
      listener:
        ack-mode: MANUAL_IMMEDIATE
      isolation-level: read_committed

grpc:
  server:
    netty:
      use-epoll: false
  client:
    hub-router:
      address: static://localhost:59090
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext